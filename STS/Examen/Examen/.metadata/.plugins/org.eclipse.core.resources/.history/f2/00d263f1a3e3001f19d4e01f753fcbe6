package ies.goya.examen.ud5.control;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ies.goya.examen.ud5.service.AlumnoService;

@RestController
public class AlumnosWebController {
	//protected AlumnoService alumnoService;
	@Autowired
	AlumnoService alumnoServicio;
	
	/*public AlumnosWebController(AlumnoService alumnoService) {
		this.alumnoService = alumnoService;
	}	*/
	
	@GetMapping("/todos")
	public String todos() {
		
	return alumnoServicio.listarAlumno().toString();
	}
	
	@GetMapping("/alumnoPorId")
	public String alumnoPorId(@RequestParam(name="id",required=false) Long id) {
		if (id==null) {
			return "HACE FALTA ID";
		}else {
			
			return alumnoServicio.buscarAlumno(id).toString();
		}
		
		
	}
	
	// En una app real los datos vendrías por POST
	@GetMapping("/nuevoAlumno")
	public String nuevoAlumno(@RequestParam(name="nombre",required=false) String nombre,
			@RequestParam(name="apellidos",required=false) String apellidos) {
		if (nombre==null || apellidos==null) return "HACEN FALTA NOMBRE Y APELLIDOS";
		return null;
	}
	
	@GetMapping("/modificaAlumno")
	public String modificaAlumno(@RequestParam(name="id",required=false) Long id,
			@RequestParam(name="nombre", required=false) String nombre,
			@RequestParam(name="apellidos", required=false) String apellidos) {
		if (id==null) return "HACE FALTA ID";
		return null;
	}
	
	@GetMapping("/borraAlumno")
	public String borraAlumno(@RequestParam(name="id",required=false) Long id) {
		if (id==null) return "HACE FALTA ID";
		return null;
	}
	
	@GetMapping("/meteEmailAlumno")
	public String asociaEmailConAlumno(@RequestParam(name="id",required=false) Long id,
			@RequestParam(name="email",required=false) String email) {
		if (id==null || email==null) return "HACE FALTA ID e EMAIL";
		return null;
	}
	
	@GetMapping("/borraEmailDeAlumno")
	public String borraEmailDeAlumno(@RequestParam(name="id",required=false) Long id,
			@RequestParam(name="email",required=false) String email) {
		if (id==null || email==null) return "HACE FALTA ID e EMAIL";
		return null;
		
	}
	
	@GetMapping("/buscaPorNombreYApellidos") 
	public String buscaAlumno(@RequestParam(name="nombre",required=false) String nombre,
							@RequestParam(name="apellidos",required=false) String apellidos) {
		if (nombre==null || apellidos==null) return "HACEN FALTA NOMBRE Y APELLIDOS";
		return null;
	}
	
	@GetMapping("/buscaPorNombre") 
	public String buscaAlumnoPorNombre(@RequestParam(name="nombre",required=false) String nombre) {
		if (nombre==null) return "HACEN FALTA NOMBRE";
		return null;
	}
	
	@GetMapping("/buscaPorApellidos") 
	public String buscaAlumnoPorApellidos(@RequestParam(name="apellidos",required=false) String apellidos) {
		if (apellidos==null) return "HACEN FALTA APELLIDOS";
		return null;
	}
	
	@GetMapping("/todosPorNombre")
	public String todosPorNombre() {
		return null; 
	}
	
	@GetMapping("/todosPorApellidos")
	public String todosPorApellidos() {
		return null; 
	}
	
	@GetMapping("/")
	public String indice() {
		if(alumnoServicio.listarAlumno().isEmpty()) {
			alumnoServicio.crearCompleto("Benjamín Alfredo","Avilés Vargas","benjamin.aviles1@educa.madrid.org");
			alumnoServicio.crearCompleto("Juan Antonio","Aznar Delgado","juan.aznar2@educa.madrid.org");
			alumnoServicio.crearCompleto("David","Barroso Martínez","dbm655@educa.madrid.org");
			alumnoServicio.crearCompleto("Sergio","Berrendero Toledano","sergio.berrendero@educa.madrid.org");
			alumnoServicio.crearCompleto("Lucas","Chacón Langa","lucas.chacon4@educa.madrid.org");
			alumnoServicio.crearCompleto("Ainhoa Nicole","Conforme Alarcón","ainhoa.conforme1@educa.madrid.org");
			alumnoServicio.crearCompleto("Hicham","El Farissi Ahram","hicham.el@educa.madrid.org");
			alumnoServicio.crearCompleto("Laila","El Haddad Rouas","laila.el18@educa.madrid.org");
			alumnoServicio.crearCompleto("Ivyel","Gago Jiménez","diego.gago@educa.madrid.org");
			alumnoServicio.crearCompleto("Lorena","Garvín Navarrete","lgn546@educa.madrid.org");
			alumnoServicio.crearCompleto("Noé Moisés","Guamán Álvarez","noe.guaman@educa.madrid.org");
			alumnoServicio.crearCompleto("Kevin","Incio Hernández","kevin.incio@educa.madrid.org");
			alumnoServicio.crearCompleto("Ángela","Mancheño Sánchez","angela.mancheno@educa.madrid.org");
			alumnoServicio.crearCompleto("Mario","Martín García","mario.martin53@educa.madrid.org");
			alumnoServicio.crearCompleto("Javier","Páez Alvarado","javier.paezalvarado@educa.madrid.org");
			alumnoServicio.crearCompleto("Lucas","Sánchez Solera","lucas.sanchez3@educa.madrid.org");
			alumnoServicio.crearCompleto("Rodrigo","Serrano Jiménez","rodrigo.serrano@educa.madrid.org");
			alumnoServicio.crearCompleto("Iván","Turro Arroyo","ita917@educa.madrid.org");
			
		}else {
			System.out.println("ya tienes datos en la base");
		}

	
		
		return "Bienvenido a GesAlumnos:"
				+ "Use <a href=/todos>/todos</a> para consultar todos"
				+ "<br> <a href=/todosPorNombre>/todosPorNombre</a> listar todos ordenados por nombre"
				+ "<br> <a href=/todosPorApellidos>todosPorApellidos</a> listar todos ordenados por apellidos"
				+ "<br> <a href=/alumnoPorId>/alumnosPorId</a> para buscar por id"
				+ "<br> <a href=/nuevoAlumno>/nuevoAlumno</a> para meter un nuevo alumno"
				+ "<br> <a href=/modificaAlumno>/modificaAlumno</a> para modificar"
				+ "<br> <a href=/borraAlumno>/borraAlumno</a> para borrar (por id)"
				+ "<br> <a href=/borraEmailDeAlumno>/borraEmailDeAlumno</a> para borrar email de un alumno por id"
				+ "<br> <a href=/meteEmailAlumno>/meteEmailAlumno</a> para añadir email a un alumno (por id)"
				+ "<br> <a href=/buscaPorNombre>/buscaPorNombre</a> para buscar por nombre"
				+ "<br> <a href=/buscaPorApellidos>/buscaPorApellidos</a> para buscar por apellidos"
				+ "<br> <a href=/buscaPorNombreYApellidos>/buscaPorNombreYApellidos</a> para buscar por nombre y apellidos";
	}
	
} // class
